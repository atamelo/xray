{
    "log": {
      "loglevel": "warning",
      "dnsLog": true
    },
# the DNS section is mandatory if you want to set up dns interception
  "dns": {
    "servers": [
      "66.66.66.66", # a fake address
      {
        "address": "8.8.8.8", #we route to google only when resolving dmain names from this config - e.g. CloudFlare WARP
        "port": 53,
        "domains": ["domain:cloudflareclient.com"]
      }
    ],
    "disableFallback": true,
    "disableFallbackIfMatch": true # it is importand to turn it off, oterwise DNS requests will be sent not only to the fake 66.66.66.66 but also to 8.8.8.8
  },
    "inbounds": [
     {
        "port": 8086,
        "listen": "127.0.0.1",
        #"listen": "@vless-ws", # useful for fallbacks - "fallbacks": [ { "path": "/vlws", "dest": "@vless-ws", "xver": 2 } ]
        "protocol": "vless",
        "tag": "ws-in",
        "settings": {
          "clients": [
            {
              "id": "REDACTED",
              "email": "user1"
            },
            {
              "id": "REDACTED",
              "email": "user2",
              "flow": "xtls-rprx-vision"
            }
          ],
          "decryption": "none"
        },
        "streamSettings": {
          "network": "ws",
          "security": "none",
          "wsSettings": {
            #"acceptProxyProtocol": true,
            "path": "REDACTED"
          }
        },
        "sniffing": {
          "enabled": true,
          "destOverride": [
            "quic",
            "http",
            "tls"
          ]
        }
    },
      {
        "listen": "127.0.0.1",
        "port": 8443,
        "protocol": "vless",
        "tag": "reality-in",
        "settings": {
          "clients": [
            {
              "id": "REDACTED",
              "email": "user1",
              "flow": "xtls-rprx-vision"
            },
            {
              "id": "REDACTED",
              "email": "user2",
              "flow": "xtls-rprx-vision"
            }
          ],
          "decryption": "none"
        },
        "streamSettings": {
          "network": "tcp",
          "security": "reality",
          "realitySettings": {
            "show": false,
            "dest": "127.0.0.1:3001",
            "xver": 0, # 1,
            "serverNames": [
              "REDACTED"
            ],
            "privateKey": "REDACTED",
            "minClientVer": "",
            "maxClientVer": "",
            "maxTimeDiff": 0,
            "shortIds": [""]
          }
        },
        "sniffing": {
          "enabled": true,
          "destOverride": [
            "http",
            "tls",
            "quic"
          ]
        }
      }

    ],
    "outbounds": [
      {
        "protocol": "wireguard",
        "tag": "warp",
        "settings": {
          "secretKey": "REDACTED",
          "address": [
            "172.16.0.2/32",
            "2606:4700:110:8130:7b85:4242:1f59:6db1/128"
          ],
          "peers": [
            {
              "endpoint": "engage.cloudflareclient.com:2408",
              "publicKey": "REDACTED"
            }
          ],
          "mtu": 1280,
          "workers": 2,
          "domainStrategy": "ForceIP"
        }
      },
      {
        "protocol": "freedom",
        "tag": "direct"
      },
      {
        "protocol": "blackhole",
        "tag": "block"
      },
      {
        "protocol": "dns",
        "tag": "dns-out",
        "settings": {
          "network": "udp",
          "address": "9.9.9.9", # overriding dns queries to always go to quad9
          "port": 53,
          "nonIPQuery": "skip"
        },
        "proxySettings": {
          "tag": "warp" # redirecting dns traffic into the warp tunnel
        }
      }
    ],
    "routing": {
      "rules": [
        {
          "type": "field",
          "protocol": "bittorrent",
          "outboundTag": "block"
        },
        {
          "type": "field",
          "ip": "192.168.0.0/16",
          "user": ["user1"],
          "outboundTag": "block"
        }
        ,
        {
          "type": "field",
          "ip": "8.8.8.8",
          "outboundTag": "direct" # if it's a DNS query from XRAY, we let it out vai direct
        },
        {
          "type": "field",
          "network": "udp", # all remaining dns traffic will be redirected
          "port": 53,
          "outboundTag": "dns-out"
        }
        ,
        {
          "type": "field",
          "user": ["user2"],
          "outboundTag": "direct"
        }
	,
	{
	   "type": "field",
	   "domain": ["habr.com"],
           "outboundTag": "warp"
	}
        ,
        {
          "type": "field",
          "domain": ["geosite:category-gov-ru", "domain:ru"],
          "outboundTag": "block"
        },
        {
          "type": "field",
          "ip": ["geoip:ru"],
          "outboundTag": "block"
        }
      ],
      "domainStrategy": "IPIfNonMatch"
    }
  }
